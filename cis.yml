---
- name: Apply CIS Benchmark to Ubuntu 20.04 Servers
  hosts: all
  become: yes
  vars:
    # Ensure system is up-to-date
    apt_update_cache: yes
    apt_upgrade: dist
    apt_autoremove: yes

  tasks:
    - name: Update APT cache
      apt:
        update_cache: "{{ apt_update_cache }}"
        cache_valid_time: 3600

    - name: Upgrade all packages to the latest version
      apt:
        upgrade: "{{ apt_upgrade }}"
        autoremove: "{{ apt_autoremove }}"

    - name: Configure UFW to allow only necessary services
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        state: enabled
      loop:
        - { rule: 'allow', port: '22', proto: 'tcp' }  # Allow SSH
        - { rule: 'allow', port: '80', proto: 'tcp' }  # Allow HTTP
        - { rule: 'allow', port: '443', proto: 'tcp' } # Allow HTTPS

    - name: Set the default UFW policy for incoming traffic
      ufw:
        default: deny
        direction: incoming

    - name: Set the default UFW policy for outgoing traffic
      ufw:
        default: deny
        direction: outgoing

    - name: Ensure no legacy SSH keys exist
      file:
        path: "/root/.ssh/authorized_keys"
        state: absent

    - name: Configure SSH to disable root login and password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
        state: present
        validate: 'sshd -t -f %s'
      loop:
        - { key: 'PermitRootLogin', value: 'no' }
        - { key: 'PasswordAuthentication', value: 'no' }
        - { key: 'PermitEmptyPasswords', value: 'no' }

    - name: Restart SSH service to apply changes
      service:
        name: ssh
        state: restarted

    - name: Ensure the system is configured to use a secure umask
      lineinfile:
        path: /etc/profile
        regexp: '^umask'
        line: 'umask 027'

    - name: Ensure a minimal umask for root
      lineinfile:
        path: /root/.bashrc
        regexp: '^umask'
        line: 'umask 027'

    - name: Ensure only authorized users can use sudo
      lineinfile:
        path: /etc/sudoers
        regexp: '^%sudo'
        line: '%sudo   ALL=(ALL:ALL) ALL'
        validate: 'visudo -cf %s'

    - name: Ensure systemd services are enabled for critical services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - systemd-journald
        - systemd-logind

    - name: Check if avahi-daemon is installed
      command: systemctl list-units --type=service --all | grep avahi-daemon
      register: avahi_daemon_check
      ignore_errors: yes

    - name: Check if bluetooth is installed
      command: systemctl list-units --type=service --all | grep bluetooth
      register: bluetooth_check
      ignore_errors: yes

    - name: Disable avahi-daemon if installed
      systemd:
        name: avahi-daemon
        enabled: no
        state: stopped
      when: avahi_daemon_check.rc == 0

    - name: Disable bluetooth if installed
      systemd:
        name: bluetooth
        enabled: no
        state: stopped
      when: bluetooth_check.rc == 0

    - name: Ensure core dumps are disabled
      lineinfile:
        path: /etc/security/limits.conf
        regexp: '^* soft core'
        line: '* soft core 0'

    - name: Configure auditd to ensure auditing is enabled
      package:
        name: auditd
        state: present

    - name: Ensure auditd service is running
      service:
        name: auditd
        state: started
        enabled: yes

    - name: Configure audit rules
      lineinfile:
        path: /etc/audit/rules.d/audit.rules
        create: yes
        line: "{{ item }}"
      loop:
        - '-w /etc/passwd -p wa -k identity'
        - '-w /etc/shadow -p wa -k identity'
        - '-w /etc/group -p wa -k identity'

    - name: Ensure filesystem is mounted with noexec, nodev, nosuid options
      mount:
        path: "{{ item.path }}"
        fstype: "{{ item.fstype }}"
        opts: "{{ item.opts }}"
        state: mounted
      loop:
        - { path: /tmp, fstype: ext4, opts: 'nodev,noexec,nosuid' }
        - { path: /var/tmp, fstype: ext4, opts: 'nodev,noexec,nosuid' }

    - name: Set system umask to 027 for new files
      lineinfile:
        path: /etc/profile
        regexp: '^umask'
        line: 'umask 027'

    - name: Configure password expiration and complexity requirements
      lineinfile:
        path: /etc/login.defs
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
      loop:
        - { key: PASS_MAX_DAYS, value: '90' }
        - { key: PASS_MIN_DAYS, value: '7' }
        - { key: PASS_MIN_LEN, value: '14' }
        - { key: PASS_WARN_AGE, value: '7' }

    - name: Ensure PAM is configured for password complexity
      lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
      loop:
        - { key: password requisite pam_pwquality.so, value: 'retry=3 minlen=12 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1' }

    - name: Ensure that the system is configured to prevent users from setting empty passwords
      lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^{{ item.key }}'
        line: '{{ item.key }} {{ item.value }}'
      loop:
        - { key: password requisite pam_pwquality.so, value: 'enforce_for_root' }
